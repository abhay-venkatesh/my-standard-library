
Dynamic Programming is a technique that is used to solve certain
combinatorial optimization problems. It involves a time-space trade-off:
we store previously computed values for subproblems, and then use those to
solve larger problems.

--- Optimal Substructure ---
Accordingly, the problems that are solvable by dynamic programming require
some notion of overlapping subproblems. This type of structure is known as
optimal substructure.

Formally, a problem is said to have optimal substructure if its subproblems
can be independently solved, and then the subproblems can be used to solve
larger problems.

By memoizing the solutions to subproblems, we can can often turn an intractable
problem into a tractable one, by trading time for memory.

--- The Motions of Solving Dynamic Programming Problems ---
Dynamic programming problems typically can be solved in a formulaic manner.
